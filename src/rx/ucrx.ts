import { UcToken } from '../syntax/uc-token.js';

/**
 * Charge receiver interface.
 *
 * Implementations of this interface generated by compiler.
 */
export interface Ucrx {
  /**
   * Array of expected value types.
   *
   * Used for error messages.
   */
  get types(): readonly string[];

  bol(value: boolean): 0 | 1;
  big(value: bigint): 0 | 1;
  ent(value: readonly UcToken[]): 0 | 1;
  nls(): Ucrx | undefined;
  nul(): 0 | 1;
  num(value: number): 0 | 1;
  str(value: string): 0 | 1;

  /**
   * Starts map entry charge.
   *
   * @param key - Target entry key.
   *
   * @returns Either entry receiver, `0` for unexpected map, or `undefined` for unexpected entry.
   */
  for(key: PropertyKey): Ucrx | 0 | undefined;

  /**
   * Finishes map charge.
   *
   * Called after all map entries {@link for charged}, unless the map is empty.
   *
   * The returned value makes sense for empty maps only. Otherwise, a preceding call to {@link for} has to return 0,
   * which prevents the map charge.
   *
   * @returns `1` if map charge permitted, or `0` otherwise.
   */
  map(): 0 | 1;

  /**
   * Starts charging a list.
   *
   * Always called _before_ the first item charge. In case of map item, always called _before_ {@link map},
   * but not necessarily before {@link for}.
   *
   * @returns `1` if list charge permitted, or `0` if list is unexpected.
   */
  and(): 0 | 1;

  /**
   * Finishes list charge.
   *
   * Always called after {@link and} call(s).
   *
   * May also be called for single values. I.e. without preceding call to {@link and}. This is not guaranteed though.
   */
  end(): void;
}
